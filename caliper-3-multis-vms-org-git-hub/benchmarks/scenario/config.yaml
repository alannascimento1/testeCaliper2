test:
  workers:
    type: local
    # number: 5
  rounds:
    - label: Create
      txNumber: 1000
      rateControl:
        type: maximum-rate
        opts:
          tps: 10
          step: 1
          sampleInterval : 20
          includeFaield: true
      workload:
        module: benchmarks/scenario/createCar.js
        arguments:
          byteSize: 1024000000
          batchSize: 1    
    - label: Query
      txNumber: 1000
      rateControl:
        type: maximum-rate
        opts:
          tps: 100
          step: 5
          sampleInterval: 20
          includeFailed: true
      workload:
        module: benchmarks/scenario/queryCar.js
        arguments:
          assets: 10   
          byteSize: 1024000000
          batchSize: 1             
monitors:
  resource:
  - module: docker
    options:
      interval: 5 
      containers:
      - all
# o que é possivel entender sobre cada rodada:
# 1 - Create: txNumber indica que será 80 transações serão geradas na primeira rodada.
#       o fixed-rate enviará transações de entrada em um intervalo fixo especificado como TPS (transações por segundo).
#       para a primeira rodada o tps é 10
# 2 - Query: tx Duration indica que o teste com a transação queryCar será feita durante 10s.
#      fixed-load: mantém uma carteira definida de transações dentro do sistema, modificando o TPS acionado. O resultado é o TPS máximo possível para o sistema enquanto mantém a carga de transação pendente.
#      Com transactionLoad = 5 é possivel manter uma carga de transação SUT de 5
